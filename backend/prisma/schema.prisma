// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  email           String         @unique
  password        String
  name            String
  lastName        String
  reports         Report[]
  comments        Comment[]
  messages        Message[]
  conversationIds String[]
  conversations   Conversation[]
}

model Report {
  id          Int        @id @default(autoincrement())
  title       String
  image       String
  description String
  type        ReportType @default(FOUND)
  latitude    Decimal
  longtitude  Decimal
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  reportId  Int
  report    Report   @relation(fields: [reportId], references: [id], onDelete: Cascade)
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum ReportType {
  FOUND
  LOST
}

model Conversation {
  id             String    @id @default(uuid())
  participantIds Int[]
  participants   User[]
  messagesId     String[]
  messages       Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id             String       @id @default(uuid())
  content        String
  senderId       Int
  sender         User         @relation(fields: [senderId], references: [id], onDelete: Cascade)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  createdAt DateTime @default(now())
}
